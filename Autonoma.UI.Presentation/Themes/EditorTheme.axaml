<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:a="clr-namespace:Autonoma.UI.Presentation.Abstractions;assembly=Autonoma.UI.Presentation"
        xmlns:m="clr-namespace:Autonoma.UI.Presentation.Model;assembly=Autonoma.UI.Presentation"
        xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
        xmlns:pb="clr-namespace:Autonoma.UI.Presentation.Behaviors;assembly=Autonoma.UI.Presentation"
        xmlns:pcv="clr-namespace:Autonoma.UI.Presentation.Converters;assembly=Autonoma.UI.Presentation"
        xmlns:pc="clr-namespace:Autonoma.UI.Presentation.Controls;assembly=Autonoma.UI.Presentation"
        x:CompileBindings="True">

	<!-- Frame -->

	<Style Selector="pc|FrameControl">
		<Setter Property="Width" Value="{Binding Width}" x:DataType="a:IFrame" />
		<Setter Property="Height" Value="{Binding Height}" x:DataType="a:IFrame" />
		<Setter Property="ClipToBounds" Value="False" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="EnableSnap" Value="False" />
		<Setter Property="SnapX" Value="2.0" />
		<Setter Property="SnapY" Value="2.0" />
		<Setter Property="GridCellWidth" Value="10.0" />
		<Setter Property="GridCellHeight" Value="10.0" />
		<Setter Property="Template">
			<ControlTemplate x:DataType="a:IFrame">
				<Panel Name="PART_Panel"
					   Background="{TemplateBinding Background}">
					<pc:GridDecorator EnableGrid="{TemplateBinding EnableGrid}"
											GridCellWidth="{TemplateBinding GridCellWidth}"
											GridCellHeight="{TemplateBinding GridCellHeight}" />
					<ItemsControl Name="PART_NodesItemsControl"
								  Items="{Binding Nodes}"
								  Width="{Binding Width}"
								  Height="{Binding Height}"
								  Background="Transparent"
								  ClipToBounds="False">
						<i:Interaction.Behaviors>
							<pb:ElementSelectedBehavior />
							<pb:FrameSelectionBehavior InputSource="{Binding $parent[pc:FrameControl].InputSource}"
								AdornerCanvas="{Binding $parent[pc:FrameControl].AdornerCanvas}"
								EnableSnap="{Binding $parent[pc:FrameControl].EnableSnap}"
								SnapX="{Binding $parent[pc:FrameControl].SnapX}"
								SnapY="{Binding $parent[pc:FrameControl].SnapY}"
								x:CompileBindings="False" />
							<pb:FramePressedBehavior />
							<pb:FrameMovedBehavior />
							<pb:ConnectorsSelectedBehavior />
						</i:Interaction.Behaviors>
						<ItemsControl.Styles>
							<Style Selector="ItemsControl > ContentPresenter" x:DataType="a:IElement">
								<Setter Property="Canvas.Left" Value="{Binding X}" />
								<Setter Property="Canvas.Top" Value="{Binding Y}" />
							</Style>
						</ItemsControl.Styles>
						<ItemsControl.ItemsPanel>
							<ItemsPanelTemplate>
								<Canvas />
							</ItemsPanelTemplate>
						</ItemsControl.ItemsPanel>
					</ItemsControl>
					<ItemsControl Name="PART_ConnectorsItemsControl"
								  Items="{Binding Connectors}"
								  Width="{Binding Width}"
								  Height="{Binding Height}"
								  Background="Transparent"
								  IsHitTestVisible="False"
								  ClipToBounds="False">
						<ItemsControl.ItemsPanel>
							<ItemsPanelTemplate>
								<Canvas />
							</ItemsPanelTemplate>
						</ItemsControl.ItemsPanel>
						<ItemsControl.ItemTemplate>
							<DataTemplate DataType="a:IConnector">
								<pc:Connector Name="PART_Connector"
													StartPoint="{Binding Start, Converter={x:Static pcv:PinToPointConverter.Instance}}"
													EndPoint="{Binding End, Converter={x:Static pcv:PinToPointConverter.Instance}}"
													Offset="{Binding Offset}"/>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</Panel>
			</ControlTemplate>
		</Setter>
	</Style>

	
	<!-- Elements -->

	<Style Selector="pc|FrameElementControl">
		<Setter Property="Width" Value="{Binding Width}" x:DataType="a:IElement" />
		<Setter Property="Height" Value="{Binding Height}" x:DataType="a:IElement" />
		<Setter Property="ClipToBounds" Value="False" />
		<Setter Property="Template">
			<ControlTemplate x:DataType="a:IElement">
				<Panel Width="{Binding Width}"
					   Height="{Binding Height}">

					<ContentPresenter Name="PART_ContentPresenter" Content="{Binding Content}"/>

					<ItemsControl Name="PART_PinsItemsControl"
                        Items="{Binding Pins}"
                        Width="{Binding Width}"
                        Height="{Binding Height}"
                        ClipToBounds="False">

						<ItemsControl.Styles>
							<Style Selector="ItemsControl > ContentPresenter" x:DataType="a:IPin">
								<Setter Property="Canvas.Left" Value="{Binding X}" />
								<Setter Property="Canvas.Top" Value="{Binding Y}" />
							</Style>
						</ItemsControl.Styles>
						
						<ItemsControl.ItemsPanel>
							<ItemsPanelTemplate>
								<Canvas />
							</ItemsPanelTemplate>
						</ItemsControl.ItemsPanel>
						<ItemsControl.ItemTemplate>
							<DataTemplate DataType="a:IPin">
								<pc:PinControl Name="PART_Pin" />
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>

				</Panel>
			</ControlTemplate>
		</Setter>
	</Style>

	<Style Selector="pc|FrameElementControl /template/ ItemsControl#PART_PinsItemsControl > :is(ContentPresenter)">
		<Setter Property="(i:Interaction.Behaviors)">
			<i:BehaviorCollectionTemplate>
				<i:BehaviorCollection>
					<pb:PinPressedBehavior />
				</i:BehaviorCollection>
			</i:BehaviorCollectionTemplate>
		</Setter>
	</Style>

	<Style Selector="pc|FrameElementControl /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="IsHitTestVisible" Value="{Binding $self.(pc:FrameControl.IsEditMode), Mode=OneWay, Converter={x:Static BoolConverters.Not}}"
				x:DataType="pc:FrameElementControl"
				x:CompileBindings="False"/>
	</Style>


	<!-- Connector -->

	<Style Selector="pc|Connector">
		<Setter Property="Stroke" Value="Red" />
		<Setter Property="StrokeThickness" Value="2" />
		<Setter Property="ClipToBounds" Value="False" />
	</Style>


	<!-- Pin -->

	<Style Selector="pc|PinControl">
		<Setter Property="Width" Value="{Binding Width}" x:DataType="a:IPin" />
		<Setter Property="Height" Value="{Binding Height}" x:DataType="a:IPin" />
		<Setter Property="Margin" Value="{Binding Converter={x:Static pcv:PinMarginConverter.Instance}}" x:DataType="a:IPin" />
		<Setter Property="ClipToBounds" Value="False" />
		<Setter Property="Template">
			<ControlTemplate x:DataType="a:IPin">
				<Rectangle Name="PART_Pin" Width="{Binding Width}" Height="{Binding Height}" />
			</ControlTemplate>
		</Setter>
	</Style>

	<Style Selector="pc|PinControl /template/ Rectangle#PART_Pin">
		<Setter Property="Fill" Value="Black" />
	</Style>

	<Style Selector="pc|PinControl:pointerover /template/ Rectangle#PART_Pin">
		<Setter Property="Fill" Value="Red" />
	</Style>

</Styles>
